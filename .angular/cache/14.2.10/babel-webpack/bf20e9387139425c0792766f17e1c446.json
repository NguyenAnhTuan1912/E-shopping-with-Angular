{"ast":null,"code":"import { Observable, Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ProductService {\n  products = [];\n  typeOfProductsView;\n  typeOfListView;\n  productsSubject = new Subject();\n  typeOfProductsViewSubject = new Subject();\n  typeOfListViewSubject = new Subject();\n  ngUnsubscribe = new Subject();\n\n  constructor() {\n    this.productObservable = this.productObservable.bind(this);\n    this.init();\n  }\n\n  init() {\n    this.productObservable().subscribe(products => {\n      console.log('Get products from subcriber in Data service');\n      console.log(products);\n      this.setProducts(products);\n    });\n    this.typeOfProductsViewObservable().subscribe(type => {\n      console.log('Get new type of product');\n      console.log(type);\n      this.setTypeOfProductsView(type);\n    });\n  }\n\n  destroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n\n  productObservable() {\n    return this.productsSubject.asObservable();\n  }\n\n  typeOfProductsViewObservable() {\n    return this.typeOfProductsViewSubject.asObservable();\n  }\n\n  typeOfListViewObservable() {\n    return this.typeOfListViewSubject.asObservable();\n  }\n\n  nextProducts(products) {\n    console.log('Next products');\n    console.log(products);\n    this.productsSubject.next(products);\n  }\n\n  setProducts(products) {\n    this.products = [...products];\n  }\n\n  getProducts() {\n    return [...this.products];\n  }\n\n  nextTypeOfProductsView(type) {\n    console.log('Next type of product');\n    console.log(type);\n    this.typeOfProductsViewSubject.next(type);\n  }\n\n  setTypeOfProductsView(type) {\n    this.typeOfProductsView = type;\n  }\n\n  getTypeOfProductsView() {\n    return this.typeOfProductsView;\n  }\n\n  nextTypeOfListView(type) {\n    console.log('Next type of list view');\n    console.log(type);\n    this.typeOfListViewSubject.next(type);\n  }\n\n  setTypeOfListView(type) {\n    this.typeOfListView = type;\n  }\n\n  getTypeOfListView() {\n    return this.typeOfListView;\n  }\n\n  static ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)();\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":null,"metadata":{},"sourceType":"module"}